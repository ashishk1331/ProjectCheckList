import Footer from "../components/Footer";
import Button from "../components/Button";
import Spinner from "../components/Spinner"
import {
	ArrowLeft,
	Envelope,
	Password,
	WarningCircle,
} from "@phosphor-icons/react";
import Link from "next/link";
import Head from 'next/head'
import { useRouter } from "next/router";
import { supabase } from "../util/SupabaseClient";
import { useState } from "react";

export default function Login(props) {
	const [signUp, setSignUp] = useState(false);
	const [error, setError] = useState(null);
	const [ isLoading, setIsLoading ] = useState(false)
	const router = useRouter();

	async function handleSubmit(e) {
		e.preventDefault();
		setIsLoading(true)

		const email = e.target.email.value,
			password = e.target.pass.value;

		try {
			if (signUp) {
				const { data, error } = await supabase.auth.signUp({
					email,
					password,
				});

				if (!error) {
					router.push("/");
				} else {
					setError(error.message);
				}
			} else {
				const { data, error } = await supabase.auth.signInWithPassword({
					email,
					password,
				});

				if (!error) {
					router.push("/");
				} else {
					setError(error.message);
				}
			}
		} catch (err) {
			setError(JSON.stringify(err, null, 2));
			console.log("error occured", err);
		} finally {
			e.target.reset();
			setIsLoading(false)
		}
	}

	return (
		<>
			<Head>
				<title>Hop In!</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link
					rel="apple-touch-icon"
					sizes="180x180"
					href="/apple-touch-icon.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="32x32"
					href="/favicon-32x32.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="16x16"
					href="/favicon-16x16.png"
				/>
				<link rel="manifest" href="/site.webmanifest" />
			</Head>
			<div className="w-full h-48 bg-gray-200 " />
			<main className="p-3 px-6 max-w-[720px] mx-auto">
				<div className="flex items-center gap-4">
					<Link href="/">
						<Button>
							<ArrowLeft className="w-6 h-6" />
						</Button>
					</Link>
					<h1 className="text-4xl">React Practice</h1>
				</div>

				<form
					className="relative w-full my-12 flex flex-col items-center gap-4 text-xl w-full sm:w-[75%] mx-auto"
					onSubmit={handleSubmit}
				>

					{ isLoading && <Spinner /> }

					<h3>{signUp ? "Sign Up" : "Log In"}</h3>

					{error && (
						<div className="w-full bg-gray-200 p-4 flex items-center gap-4">
							<WarningCircle className="w-6 h-6 mt-1" />
							<p>{error}</p>
						</div>
					)}

					<h3 className="w-full">Email</h3>
					<label
						htmlFor="email"
						className="flex items-center gap-2 p-2 border-2 rounded w-full"
					>
						<Envelope
							weight="light"
							className="w-8 h-8 fill-gray-400"
						/>
						<input
							type="email"
							id="email"
							name="email"
							placeholder="Email"
							className="w-full outline-none"
							required
						/>
					</label>

					<h3 className="w-full mt-4">Password</h3>
					<label
						htmlFor="pass"
						className="flex items-center gap-2 p-2 border-2 rounded w-full"
					>
						<Password
							weight="light"
							className="w-8 h-8 fill-gray-400"
						/>
						<input
							type="password"
							id="pass"
							name="pass"
							placeholder="Password"
							className="w-full outline-none"
							required
						/>
					</label>

					<Button cl="w-full mt-8" type="submit">
						Next
					</Button>

					{signUp ? (
						<p>
							Already a member{" "}
							<a
								href="#"
								className="underline"
								onClick={(e) => setSignUp(!signUp)}
							>
								log in
							</a>
						</p>
					) : (
						<>
							<p>
								Not yet signed up, so{" "}
								<a
									href="#"
									className="underline"
									onClick={(e) => setSignUp(!signUp)}
								>
									sign up
								</a>
							</p>
							<p>and keep your progress safe.</p>
						</>
					)}
				</form>

				<Footer />
			</main>
		</>
	);
}
